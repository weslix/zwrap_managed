managed
implementation in class zbp_i_wrap_certifproduct unique;
strict ( 1 );

define behavior for ZI_WRAP_CERTIFPRODUCT alias Certificate
persistent table zwrap_certif
lock master
authorization master ( instance )
//etag master <field_name>
{
  create;
  update;
  delete;

  association _Stats { create; }

  field ( numbering : managed, readonly ) CertUuid;
  field ( readonly ) Description;
  field ( mandatory ) Matnr;

  mapping for zwrap_certif
    {
      Matnr              = matnr;
      Version            = version;
      CertStatus         = cert_status;
      CertCe             = cert_ce;
      CertGs             = cert_gs;
      CertFcc            = cert_fcc;
      CertIso            = cert_iso;
      CertTuev           = cert_tuev;
      LocalLastChangedAt = local_last_changed_at;
    }
}

define behavior for ZI_WRAP_CERTIFSTPRODUCT alias CertificateST
persistent table zwrap_certif_st
lock dependent by _Certif
authorization dependent by _Certif
//etag master <field_name>
{

  delete;

  field ( readonly ) CertUuid;
  field ( numbering : managed, readonly ) StateUuid;

  association _Certif;

  mapping for zwrap_certif_st
    {
      StateUuid          = state_uuid;
      CertUuid           = cert_uuid;
      Matnr              = matnr;
      Version            = version;
      Status             = status;
      StatusOld          = status_old;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }
}